[metadata]
name = pyflct
author = The SunPy Developers
author_email = sunpy@googlegroups.com
license = GNU GPL v3+
license_file = LICENSE.rst
url = http://docs.sunpy.org/projects/pyflct/
description = A Python wrapper for Fourier Local Correlation Tracking.
long_description = file: README.rst
classifiers =
  Development Status :: 5 - Production/Stable
  Intended Audience :: Science/Research
  License :: OSI Approved :: GNU General Public License v3 (GPLv3)
  Natural Language :: English
  Operating System :: MacOS
  Operating System :: POSIX :: Linux
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.6
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
setup_requires =
  cython
  setuptools_scm
install_requires =
  numpy

[options.extras_require]
test =
    pytest-astropy
    pytest-cov
docs =
  sphinx
  sphinx-astropy
  sphinx-gallery
  sunpy-sphinx-theme
  towncrier

[options.package_data]
pyflct = data/*

[tool:pytest]
testpaths = "pyflct" "docs"
norecursedirs = ".tox" "build" "docs[\/]_build" "docs[\/]generated" "*.egg-info" "examples" ".history"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[pycodestyle]
max_line_length = 110

[flake8]
max-line-length = 110

[isort]
default_section = THIRDPARTY
force_grid_wrap = 0
include_trailing_comma = true
known_astropy = astropy, asdf, sunpy
known_first_party = pyflct
length_sort = False
length_sort_stdlib = True
line_length = 110
multi_line_output = 3
skip = .history/,
not_skip = __init__.py
sections = FUTURE, STDLIB, THIRDPARTY, ASTROPY, FIRSTPARTY, LOCALFOLDER

[coverage:run]
omit =
  pyflct/_sunpy_init*
  pyflct/conftest.py
  pyflct/*setup_package*
  pyflct/tests/*
  pyflct/*/tests/*
  pyflct/extern/*
  pyflct/version*
  */pyflct/_sunpy_init*
  */pyflct/conftest.py
  */pyflct/*setup_package*
  */pyflct/tests/*
  */pyflct/*/tests/*
  */pyflct/extern/*
  */pyflct/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_

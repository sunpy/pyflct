name: CI

on:
  push:
    branches:
      - "main"
      - "*.*"
      - "!*backport*"
    tags:
      - "v*"
      - "!*dev*"
      - "!*pre*"
      - "!*post*"
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  core:
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@main
    with:
      submodules: false
      coverage: codecov
      toxdeps: tox-pypi-filter
      libraries: |
        apt:
          - libfftw3-dev
      envs: |
        - linux: py312

  tests:
    needs: [core]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@main
    with:
      submodules: false
      coverage: codecov
      toxdeps: tox-pypi-filter
      libraries: |
        apt:
          - libfftw3-dev
        brew:
          - fftw
      envs: |
        # Mac Intel
        - macos: py311
          runs-on: macos-12
        - linux: py310

  conda-linux:
    needs: [core]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: pyflct-test
          environment-file: pyflct-env.yml
          python-version: 3.12
      - name: Install pyflct
        shell: bash -el {0}
        run: |
          pip install --no-deps --no-build-isolation .
      - name: Run tests
        shell: bash -el {0}
        run: |
          conda list
          cd /tmp
          pytest -vvv -r a --pyargs pyflct

  # This checks that the package can be installed and run on a Mac
  # without using brew
  conda-mac:
    needs: [core]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: pyflct-test
          environment-file: pyflct-env.yml
          python-version: 3.12
      - name: Install pyflct
        shell: bash -el {0}
        run: |
          pip install --no-deps --no-build-isolation .
      - name: Run tests
        shell: bash -el {0}
        run: |
          conda list
          cd /tmp
          pytest -vvv -r a --pyargs pyflct

  failing_mac_arm:
    needs: [core]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@main
    with:
      submodules: false
      coverage: codecov
      toxdeps: tox-pypi-filter
      libraries: |
        brew:
          - fftw
      envs: |
        # Mac Arm
        - macos: py312
          runs-on: macos-latest
        # Linux Arm
        # TODO: Workout how to add

  conda-windows:
    needs: [core]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: pyflct-test
          environment-file: pyflct-env.yml
          python-version: 3.12
      - name: Install pyflct
        shell: bash -el {0}
        run: |
          pip install --no-deps --no-build-isolation .
      - name: Run tests
        shell: bash -el {0}
        run: |
          conda list
          cd /tmp
          pytest -vvv -r a --pyargs pyflct

  docs:
    needs: [core]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@main
    with:
      default_python: "3.12"
      submodules: false
      pytest: false
      toxdeps: tox-pypi-filter
      cache-key: docs-${{ github.run_id }}
      libraries: |
        apt:
          - graphviz
          - libfftw3-dev
      envs: |
        - linux: build_docs

  publish:
    if: |
      (
        github.event_name != 'pull_request' && (
          github.ref_name != 'main' ||
          github.event_name == 'workflow_dispatch'
        )
      ) || (
        github.event_name == 'pull_request' &&
        contains(github.event.pull_request.labels.*.name, 'Run publish')
      )
    needs: [tests]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/publish.yml@main
    with:
      test_extras: "test"
      test_command: 'pytest -p no:warnings --doctest-rst -m "not mpl_image_compare" --pyargs pyflct'
      submodules: false
      libraries: libfftw3-dev
      targets: |
        #- cp310-macosx_arm64
        - cp310-macosx_x86_64
        - cp310-manylinux_x86_64
        #- cp311-macosx_arm64
        - cp311-macosx_x86_64
        - cp311-manylinux_x86_64
        #- cp312-macosx_arm64
        - cp312-macosx_x86_64
        - cp312-manylinux_x86_64
    secrets:
      pypi_token: ${{ secrets.pypi_token }}
